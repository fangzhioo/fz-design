@use 'sass:map';

@use '../config/mixins.scss' as *;
@use '../config/mixins-var.scss' as *;
@use '../config/common-var.scss' as *;

$avatar: () !default;
$avatar: map.merge(
  (
    'text-color': getCssVar('color-white'),
    'bg-color': getCssVar('text-color', 'disabled'),
    'text-size': 14px,
    'icon-size': 18px,
    'border-radius': getCssVar('border-radius-base')
  ),
  $avatar
);

$avatar-size: () !default;
$avatar-size: map.merge(
  (
    'large': 56px,
    'default': 40px,
    'small': 24px
  ),
  $avatar-size
);

@include b(avatar) {
  @include set-component-css-var('avatar', $avatar);
  @include set-component-css-var('avatar-size', $avatar-size);

  @include set-css-var-value(('avatar', 'size'), map.get($avatar-size, 'default'));

  display: inline-flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  text-align: center;
  overflow: hidden;
  color: getCssVar('avatar', 'text-color');
  background: getCssVar('avatar', 'bg-color');
  width: getCssVar('avatar', 'size');
  height: getCssVar('avatar', 'size');
  font-size: getCssVar('avatar', 'text-size');

  > img {
    display: block;
    width: 100%;
    height: 100%;
  }

  @include m(circle) {
    border-radius: 50%;
  }

  @include m(square) {
    border-radius: getCssVar('avatar', 'border-radius');
  }

  @include m(icon) {
    font-size: getCssVar('avatar', 'icon-size');
  }

  @each $size in (small, large) {
    @include m($size) {
      @include set-css-var-value(('avatar', 'size'), map.get($avatar-size, $size));
    }
  }
}
