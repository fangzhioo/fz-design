@use 'sass:map';

@use 'config/mixins.scss' as *;
@use 'config/mixins-var.scss' as *;
@use 'config/common-var.scss' as *;

// Message
$message: () !default;
$message: map.merge(
  (
    'font-size': getCssVar('font-size-base'),
    'color': getCssVar('text-color-regular'),
    'background': getCssVar('bg-color'),
    'z-index': getCssVar('index-popper'),
    'box-shadow': getCssVar('box-shadow')
  ),
  $message
);

@include b(message) {
  @include set-component-css-var('message', $message);

  position: fixed;
  padding: 8px 16px;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 500px;
  transition: all 0.4s ease-out;
  font-size: getCssVar('message', 'font-size');
  box-shadow: getCssVar('message', 'box-shadow');
  z-index: getCssVar('message', 'z-index');
  background: getCssVar('message', 'background');
  color: getCssVar('message', 'color');

  @each $type in $types {
    &.#{$namespace}-message--#{$type} {
      @include css-var-from-global(('message', 'color'), ('color', $type));
    }
  }

  @include e(text) {
    padding: 0;
  }

  @include when(round) {
    border-radius: 20px;
  }

  @include m(top) {
    left: 50%;
    transform: translateX(-50%);
    &.#{$namespace}-message-fade-top-enter-from,
    &.#{$namespace}-message-fade-top-leave-to {
      opacity: 0;
      transform: translate(-50%, -100%);
    }
  }

  @include m(top-left) {
    left: 20px;
  }

  @include m(top-right) {
    right: 20px;
  }

  @include m(bottom) {
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);

    &.#{$namespace}-message-fade-bottom-enter-from,
    &.#{$namespace}-message-fade-bottom-leave-to {
      opacity: 0;
      transform: translate(-50%, 100%);
    }
  }

  @include m(bottom-left) {
    left: 20px;
    bottom: 0;
  }

  @include m(bottom-right) {
    right: 20px;
    bottom: 0;
  }

  @include e(before_icon) {
    margin-right: 10px;
  }

  @include e(close) {
    margin-left: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }

  &-fade-top-enter-active,
  &-fade-bottom-enter-active {
    transition: all 0.15s ease-out;
  }

  &-fade-top-leave-active,
  &-fade-bottom-leave-active {
    transition: all 0.15s cubic-bezier(1, 0.5, 0.8, 1);
  }

  &-fade-top-enter-from,
  &-fade-top-leave-to {
    opacity: 0;
    transform: translateY(-100%);
  }

  &-fade-bottom-enter-from,
  &-fade-bottom-leave-to {
    opacity: 0;
    transform: translateY(100%);
  }
}
