@use 'sass:map';

@use '../config/common-var.scss' as *;
@use '../config/mixins.scss' as *;
@use '../config/mixins-var.scss' as *;

// Input
$input: () !default;
$input: map.merge(
  (
    'text-color': getCssVar('text-color-regular'),
    'border': getCssVar('border'),
    'hover-border': getCssVar('border-color-hover'),
    'focus-border': getCssVar('color-primary'),
    'transparent-border': 0 0 0 1px transparent inset,
    'border-color': getCssVar('border-color'),
    'border-radius': getCssVar('border-radius-base'),
    'bg-color': getCssVar('fill-color', 'blank'),
    'icon-color': getCssVar('text-color-placeholder'),
    'placeholder-color': getCssVar('text-color-placeholder'),
    'hover-border-color': getCssVar('border-color-hover'),
    'clear-hover-color': getCssVar('text-color-secondary'),
    'focus-border-color': getCssVar('color-primary'),
    'width': 100%
  ),
  $input
);

$input-disabled: () !default;
$input-disabled: map.merge(
  (
    'fill': getCssVar('disabled-bg-color'),
    'border': getCssVar('disabled-border-color'),
    'text-color': getCssVar('disabled-text-color'),
    'placeholder-color': getCssVar('text-color-placeholder')
  ),
  $input-disabled
);

$input-font-size: () !default;
$input-font-size: map.merge(
  (
    'large': 16px,
    'default': 14px,
    'small': 12px
  ),
  $input-font-size
);

$input-height: () !default;
$input-height: map.merge($common-component-size, $input-height);

$input-line-height: () !default;
$input-line-height: map.merge($common-component-size, $input-line-height);

$input-padding-horizontal: () !default;
$input-padding-horizontal: map.merge(
  (
    'large': 16px,
    'default': 12px,
    'small': 8px
  ),
  $input-padding-horizontal
);

@include b(input) {
  @include set-component-css-var('input', $input);

  display: inline-flex;
  justify-content: center;
  align-items: center;
  flex-wrap: nowrap;
  position: relative;
  vertical-align: middle;
  box-sizing: border-box;
  width: getCssVar('input', 'width');
  font-size: map.get($input-font-size, 'default');

  // 滚动条
  @include scroll-bar;

  // 大小
  @each $size in (large, small) {
    @include m($size) {
      font-size: map.get($input-font-size, $size);
      line-height: map.get($input-line-height, $size);

      .#{$namespace}-input__wrapper {
        padding: 1px map.get($input-padding-horizontal, $size);

        .#{$namespace}-input__inner {
          height: calc(map.get($input-height, $size) - 2px);
          line-height: calc(map.get($input-height, $size) - 2px);
        }
      }
    }
  }

  // wrapper
  @include e(wrapper) {
    display: inline-flex;
    flex: 1;
    justify-content: center;
    align-items: center;
    padding: 1px map.get($input-padding-horizontal, 'default');
    box-sizing: border-box;
    transition: 0.3s;
    border: none;
    background-image: none;
    color: getCssVar('input', 'text-color');
    background-color: getCssVar('input', 'bg-color');
    border-radius: getCssVar('input', 'border-radius');
    transform: translate3d(0, 0, 0);
    transition: getCssVar('transition-box-shadow');

    @include inset-input-border(#{getCssVar('input', 'border-color')});

    &:hover,
    &:focus {
      @include inset-input-border(#{getCssVar('input', 'hover-border-color')});
    }

    // inner
    @include e(inner) {
      padding: 0;
      outline: 0;
      border: none;
      background: 0 0;
      box-sizing: border-box;
      font-size: inherit;
      width: 100%;
      flex-grow: 1;
      height: calc(map.get($input-height, 'default') - 2px);
      line-height: calc(map.get($input-height, 'default') - 2px);
      cursor: text;

      // 禁用原生右侧上下选择箭头
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
      }

      &:focus {
        outline: 0;
      }

      &::placeholder {
        color: getCssVarWithDefault(
          'input-placeholder-color',
          map.get($input, 'placeholder-color')
        );
      }

      &[type='password']::-ms-reveal {
        display: none;
      }
    }
  }

  // 清除按钮
  @include e(clear-btn) {
    cursor: pointer;
    color: getCssVar('input', 'icon-color');

    &:hover {
      color: getCssVar('input', 'clear-hover-color');
    }
  }

  // 密码展示
  @include e(show-password) {
    cursor: pointer;
    color: getCssVar('input', 'icon-color');

    &:hover {
      color: getCssVar('input', 'clear-hover-color');
    }
  }

  // 前后缀
  @include e(prefix) {
    margin-right: 4px;
  }

  @include e(suffix) {
    margin-left: 4px;
  }

  // 前后插槽
  @include e(before) {
    position: relative;
    display: inline-flex;
    box-sizing: border-box;
    align-items: center;
    justify-content: center;
    min-height: 100%;
    border-radius: getCssVar('input', 'border-radius');
    white-space: nowrap;

    border-right: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    box-shadow: 1px 0 0 0 getCssVar('input', 'border-color') inset,
      0 1px 0 0 getCssVar('input', 'border-color') inset,
      0 -1px 0 0 getCssVar('input', 'border-color') inset;

    &:focus {
      outline: none;
    }
  }

  @include e(after) {
    position: relative;
    display: inline-flex;
    box-sizing: border-box;
    align-items: center;
    justify-content: center;
    min-height: 100%;
    border-radius: getCssVar('input', 'border-radius');
    white-space: nowrap;

    border-left: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    box-shadow: 0 1px 0 0 getCssVar('input', 'border-color') inset,
      0 -1px 0 0 getCssVar('input', 'border-color') inset,
      -1px 0 0 0 getCssVar('input', 'border-color') inset;

    &:focus {
      outline: none;
    }
  }

  // 搜索框
  @include when(search) {
    cursor: pointer;
  }

  // 插槽
  @include when(before) {
    // 移除 input 圆角
    .#{$namespace}-input__wrapper {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    .#{$namespace}-input__before {
      .#{$namespace}-button,
      .#{$namespace}-input {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  }

  @include when(after) {
    // 移除 input 圆角
    .#{$namespace}-input__wrapper {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .#{$namespace}-input__after {
      .#{$namespace}-button,
      .#{$namespace}-input {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
  }

  @include when(disabled) {
    cursor: not-allowed;

    .#{$namespace}-input__wrapper {
      background-color: map.get($input-disabled, 'fill');

      .#{$namespace}-input__inner {
        color: getCssVar('input', 'disabled-text-color');

        &::placeholder {
          color: map.get($input-disabled, 'placeholder-color');
        }
      }
      .#{$namespace}-input__icon {
        cursor: not-allowed;
      }
    }
  }

  // hidden

  @include when(hidden) {
    display: none;
  }
}
